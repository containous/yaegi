package stdlib

// Code generated by 'goexports sort'. DO NOT EDIT.

import (
	"reflect"
	"sort"
)

func init() {
	Value["sort"] = map[string]reflect.Value{
		"Float64s":          reflect.ValueOf(sort.Float64s),
		"Float64sAreSorted": reflect.ValueOf(sort.Float64sAreSorted),
		"Ints":              reflect.ValueOf(sort.Ints),
		"IntsAreSorted":     reflect.ValueOf(sort.IntsAreSorted),
		"IsSorted":          reflect.ValueOf(sort.IsSorted),
		"Reverse":           reflect.ValueOf(sort.Reverse),
		"Search":            reflect.ValueOf(sort.Search),
		"SearchFloat64s":    reflect.ValueOf(sort.SearchFloat64s),
		"SearchInts":        reflect.ValueOf(sort.SearchInts),
		"SearchStrings":     reflect.ValueOf(sort.SearchStrings),
		"Slice":             reflect.ValueOf(sort.Slice),
		"SliceIsSorted":     reflect.ValueOf(sort.SliceIsSorted),
		"SliceStable":       reflect.ValueOf(sort.SliceStable),
		"Sort":              reflect.ValueOf(sort.Sort),
		"Stable":            reflect.ValueOf(sort.Stable),
		"Strings":           reflect.ValueOf(sort.Strings),
		"StringsAreSorted":  reflect.ValueOf(sort.StringsAreSorted),
	}

	Type["sort"] = map[string]reflect.Type{
		"Float64Slice": reflect.TypeOf((*sort.Float64Slice)(nil)).Elem(),
		"IntSlice":     reflect.TypeOf((*sort.IntSlice)(nil)).Elem(),
		"Interface":    reflect.TypeOf((*sort.Interface)(nil)).Elem(),
		"StringSlice":  reflect.TypeOf((*sort.StringSlice)(nil)).Elem(),
	}
}
