// +build go1.12, !go1.13

package stdlib

// Code generated by 'goexports encoding/binary'. DO NOT EDIT.

import (
	"encoding/binary"
	"reflect"
)

func init() {
	Value["encoding/binary"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BigEndian":      reflect.ValueOf(&binary.BigEndian).Elem(),
		"LittleEndian":   reflect.ValueOf(&binary.LittleEndian).Elem(),
		"MaxVarintLen16": reflect.ValueOf(binary.MaxVarintLen16),
		"MaxVarintLen32": reflect.ValueOf(binary.MaxVarintLen32),
		"MaxVarintLen64": reflect.ValueOf(binary.MaxVarintLen64),
		"PutUvarint":     reflect.ValueOf(binary.PutUvarint),
		"PutVarint":      reflect.ValueOf(binary.PutVarint),
		"Read":           reflect.ValueOf(binary.Read),
		"ReadUvarint":    reflect.ValueOf(binary.ReadUvarint),
		"ReadVarint":     reflect.ValueOf(binary.ReadVarint),
		"Size":           reflect.ValueOf(binary.Size),
		"Uvarint":        reflect.ValueOf(binary.Uvarint),
		"Varint":         reflect.ValueOf(binary.Varint),
		"Write":          reflect.ValueOf(binary.Write),

		// type definitions
		"ByteOrder": reflect.ValueOf((*binary.ByteOrder)(nil)),
	}
}
