// +build go1.12,!go1.13

package stdlib

// Code generated by 'goexports sync'. DO NOT EDIT.

import (
	"reflect"
	"sync"
)

func init() {
	Value["sync"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"NewCond": reflect.ValueOf(sync.NewCond),

		// type definitions
		"Cond":      reflect.ValueOf((*sync.Cond)(nil)),
		"Locker":    reflect.ValueOf((*sync.Locker)(nil)),
		"Map":       reflect.ValueOf((*sync.Map)(nil)),
		"Mutex":     reflect.ValueOf((*sync.Mutex)(nil)),
		"Once":      reflect.ValueOf((*sync.Once)(nil)),
		"Pool":      reflect.ValueOf((*sync.Pool)(nil)),
		"RWMutex":   reflect.ValueOf((*sync.RWMutex)(nil)),
		"WaitGroup": reflect.ValueOf((*sync.WaitGroup)(nil)),
	}
}
