package stdlib

// Code generated by 'goexports compress/zlib'. DO NOT EDIT.

import (
	"compress/zlib"
	"reflect"
)

func init() {
	Value["compress/zlib"] = map[string]reflect.Value{
		"BestCompression":    reflect.ValueOf(zlib.BestCompression),
		"BestSpeed":          reflect.ValueOf(zlib.BestSpeed),
		"DefaultCompression": reflect.ValueOf(zlib.DefaultCompression),
		"ErrChecksum":        reflect.ValueOf(&zlib.ErrChecksum).Elem(),
		"ErrDictionary":      reflect.ValueOf(&zlib.ErrDictionary).Elem(),
		"ErrHeader":          reflect.ValueOf(&zlib.ErrHeader).Elem(),
		"HuffmanOnly":        reflect.ValueOf(zlib.HuffmanOnly),
		"NewReader":          reflect.ValueOf(zlib.NewReader),
		"NewReaderDict":      reflect.ValueOf(zlib.NewReaderDict),
		"NewWriter":          reflect.ValueOf(zlib.NewWriter),
		"NewWriterLevel":     reflect.ValueOf(zlib.NewWriterLevel),
		"NewWriterLevelDict": reflect.ValueOf(zlib.NewWriterLevelDict),
		"NoCompression":      reflect.ValueOf(zlib.NoCompression),
	}

	Type["compress/zlib"] = map[string]reflect.Type{
		"Resetter": reflect.TypeOf((*zlib.Resetter)(nil)).Elem(),
		"Writer":   reflect.TypeOf((*zlib.Writer)(nil)).Elem(),
	}
}
