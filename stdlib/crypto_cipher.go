package stdlib

// Code generated by 'goexports crypto/cipher'. DO NOT EDIT.

import (
	"crypto/cipher"
	"reflect"
)

func init() {
	Value["crypto/cipher"] = map[string]reflect.Value{
		"NewCBCDecrypter":     reflect.ValueOf(cipher.NewCBCDecrypter),
		"NewCBCEncrypter":     reflect.ValueOf(cipher.NewCBCEncrypter),
		"NewCFBDecrypter":     reflect.ValueOf(cipher.NewCFBDecrypter),
		"NewCFBEncrypter":     reflect.ValueOf(cipher.NewCFBEncrypter),
		"NewCTR":              reflect.ValueOf(cipher.NewCTR),
		"NewGCM":              reflect.ValueOf(cipher.NewGCM),
		"NewGCMWithNonceSize": reflect.ValueOf(cipher.NewGCMWithNonceSize),
		"NewGCMWithTagSize":   reflect.ValueOf(cipher.NewGCMWithTagSize),
		"NewOFB":              reflect.ValueOf(cipher.NewOFB),
	}

	Type["crypto/cipher"] = map[string]reflect.Type{
		"AEAD":         reflect.TypeOf((*cipher.AEAD)(nil)).Elem(),
		"Block":        reflect.TypeOf((*cipher.Block)(nil)).Elem(),
		"BlockMode":    reflect.TypeOf((*cipher.BlockMode)(nil)).Elem(),
		"Stream":       reflect.TypeOf((*cipher.Stream)(nil)).Elem(),
		"StreamReader": reflect.TypeOf((*cipher.StreamReader)(nil)).Elem(),
		"StreamWriter": reflect.TypeOf((*cipher.StreamWriter)(nil)).Elem(),
	}
}
