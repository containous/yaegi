package stdlib

// Code generated by 'goexports text/scanner'. DO NOT EDIT.

import (
	"reflect"
	"text/scanner"
)

func init() {
	Value["text/scanner"] = map[string]reflect.Value{
		"Char":           reflect.ValueOf(scanner.Char),
		"Comment":        reflect.ValueOf(scanner.Comment),
		"EOF":            reflect.ValueOf(scanner.EOF),
		"Float":          reflect.ValueOf(scanner.Float),
		"GoTokens":       reflect.ValueOf(scanner.GoTokens),
		"GoWhitespace":   reflect.ValueOf(int64(scanner.GoWhitespace)),
		"Ident":          reflect.ValueOf(scanner.Ident),
		"Int":            reflect.ValueOf(scanner.Int),
		"RawString":      reflect.ValueOf(scanner.RawString),
		"ScanChars":      reflect.ValueOf(scanner.ScanChars),
		"ScanComments":   reflect.ValueOf(scanner.ScanComments),
		"ScanFloats":     reflect.ValueOf(scanner.ScanFloats),
		"ScanIdents":     reflect.ValueOf(scanner.ScanIdents),
		"ScanInts":       reflect.ValueOf(scanner.ScanInts),
		"ScanRawStrings": reflect.ValueOf(scanner.ScanRawStrings),
		"ScanStrings":    reflect.ValueOf(scanner.ScanStrings),
		"SkipComments":   reflect.ValueOf(scanner.SkipComments),
		"String":         reflect.ValueOf(scanner.String),
		"TokenString":    reflect.ValueOf(scanner.TokenString),
	}

	Type["text/scanner"] = map[string]reflect.Type{
		"Position": reflect.TypeOf((*scanner.Position)(nil)).Elem(),
		"Scanner":  reflect.TypeOf((*scanner.Scanner)(nil)).Elem(),
	}
}
