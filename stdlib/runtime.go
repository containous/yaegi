package stdlib

// Code generated by 'goexports runtime'. DO NOT EDIT.

import (
	"reflect"
	"runtime"
)

func init() {
	Value["runtime"] = map[string]reflect.Value{
		"BlockProfile":            reflect.ValueOf(runtime.BlockProfile),
		"Breakpoint":              reflect.ValueOf(runtime.Breakpoint),
		"CPUProfile":              reflect.ValueOf(runtime.CPUProfile),
		"Caller":                  reflect.ValueOf(runtime.Caller),
		"Callers":                 reflect.ValueOf(runtime.Callers),
		"CallersFrames":           reflect.ValueOf(runtime.CallersFrames),
		"Compiler":                reflect.ValueOf(runtime.Compiler),
		"FuncForPC":               reflect.ValueOf(runtime.FuncForPC),
		"GC":                      reflect.ValueOf(runtime.GC),
		"GOARCH":                  reflect.ValueOf(runtime.GOARCH),
		"GOMAXPROCS":              reflect.ValueOf(runtime.GOMAXPROCS),
		"GOOS":                    reflect.ValueOf(runtime.GOOS),
		"GOROOT":                  reflect.ValueOf(runtime.GOROOT),
		"Goexit":                  reflect.ValueOf(runtime.Goexit),
		"GoroutineProfile":        reflect.ValueOf(runtime.GoroutineProfile),
		"Gosched":                 reflect.ValueOf(runtime.Gosched),
		"KeepAlive":               reflect.ValueOf(runtime.KeepAlive),
		"LockOSThread":            reflect.ValueOf(runtime.LockOSThread),
		"MemProfile":              reflect.ValueOf(runtime.MemProfile),
		"MemProfileRate":          reflect.ValueOf(runtime.MemProfileRate),
		"MutexProfile":            reflect.ValueOf(runtime.MutexProfile),
		"NumCPU":                  reflect.ValueOf(runtime.NumCPU),
		"NumCgoCall":              reflect.ValueOf(runtime.NumCgoCall),
		"NumGoroutine":            reflect.ValueOf(runtime.NumGoroutine),
		"ReadMemStats":            reflect.ValueOf(runtime.ReadMemStats),
		"ReadTrace":               reflect.ValueOf(runtime.ReadTrace),
		"SetBlockProfileRate":     reflect.ValueOf(runtime.SetBlockProfileRate),
		"SetCPUProfileRate":       reflect.ValueOf(runtime.SetCPUProfileRate),
		"SetCgoTraceback":         reflect.ValueOf(runtime.SetCgoTraceback),
		"SetFinalizer":            reflect.ValueOf(runtime.SetFinalizer),
		"SetMutexProfileFraction": reflect.ValueOf(runtime.SetMutexProfileFraction),
		"Stack":                   reflect.ValueOf(runtime.Stack),
		"StartTrace":              reflect.ValueOf(runtime.StartTrace),
		"StopTrace":               reflect.ValueOf(runtime.StopTrace),
		"ThreadCreateProfile":     reflect.ValueOf(runtime.ThreadCreateProfile),
		"UnlockOSThread":          reflect.ValueOf(runtime.UnlockOSThread),
		"Version":                 reflect.ValueOf(runtime.Version),
	}

	Type["runtime"] = map[string]reflect.Type{
		"BlockProfileRecord": reflect.TypeOf((*runtime.BlockProfileRecord)(nil)).Elem(),
		"Error":              reflect.TypeOf((*runtime.Error)(nil)).Elem(),
		"Frame":              reflect.TypeOf((*runtime.Frame)(nil)).Elem(),
		"Frames":             reflect.TypeOf((*runtime.Frames)(nil)).Elem(),
		"Func":               reflect.TypeOf((*runtime.Func)(nil)).Elem(),
		"MemProfileRecord":   reflect.TypeOf((*runtime.MemProfileRecord)(nil)).Elem(),
		"MemStats":           reflect.TypeOf((*runtime.MemStats)(nil)).Elem(),
		"StackRecord":        reflect.TypeOf((*runtime.StackRecord)(nil)).Elem(),
		"TypeAssertionError": reflect.TypeOf((*runtime.TypeAssertionError)(nil)).Elem(),
	}
}
