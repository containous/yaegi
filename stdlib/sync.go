package stdlib

// Code generated by 'goexports sync'. DO NOT EDIT.

import (
	"reflect"
	"sync"
)

func init() {
	Value["sync"] = map[string]reflect.Value{
		"NewCond": reflect.ValueOf(sync.NewCond),
	}

	Type["sync"] = map[string]reflect.Type{
		"Cond":      reflect.TypeOf((*sync.Cond)(nil)).Elem(),
		"Locker":    reflect.TypeOf((*sync.Locker)(nil)).Elem(),
		"Map":       reflect.TypeOf((*sync.Map)(nil)).Elem(),
		"Mutex":     reflect.TypeOf((*sync.Mutex)(nil)).Elem(),
		"Once":      reflect.TypeOf((*sync.Once)(nil)).Elem(),
		"Pool":      reflect.TypeOf((*sync.Pool)(nil)).Elem(),
		"RWMutex":   reflect.TypeOf((*sync.RWMutex)(nil)).Elem(),
		"WaitGroup": reflect.TypeOf((*sync.WaitGroup)(nil)).Elem(),
	}
}
