package stdlib

// Code generated by 'goexports net/http/httputil'. DO NOT EDIT.

import (
	"net/http/httputil"
	"reflect"
)

func init() {
	Value["net/http/httputil"] = map[string]reflect.Value{
		"DumpRequest":               reflect.ValueOf(httputil.DumpRequest),
		"DumpRequestOut":            reflect.ValueOf(httputil.DumpRequestOut),
		"DumpResponse":              reflect.ValueOf(httputil.DumpResponse),
		"ErrClosed":                 reflect.ValueOf(&httputil.ErrClosed).Elem(),
		"ErrLineTooLong":            reflect.ValueOf(&httputil.ErrLineTooLong).Elem(),
		"ErrPersistEOF":             reflect.ValueOf(&httputil.ErrPersistEOF).Elem(),
		"ErrPipeline":               reflect.ValueOf(&httputil.ErrPipeline).Elem(),
		"NewChunkedReader":          reflect.ValueOf(httputil.NewChunkedReader),
		"NewChunkedWriter":          reflect.ValueOf(httputil.NewChunkedWriter),
		"NewClientConn":             reflect.ValueOf(httputil.NewClientConn),
		"NewProxyClientConn":        reflect.ValueOf(httputil.NewProxyClientConn),
		"NewServerConn":             reflect.ValueOf(httputil.NewServerConn),
		"NewSingleHostReverseProxy": reflect.ValueOf(httputil.NewSingleHostReverseProxy),
	}

	Type["net/http/httputil"] = map[string]reflect.Type{
		"BufferPool":   reflect.TypeOf((*httputil.BufferPool)(nil)).Elem(),
		"ClientConn":   reflect.TypeOf((*httputil.ClientConn)(nil)).Elem(),
		"ReverseProxy": reflect.TypeOf((*httputil.ReverseProxy)(nil)).Elem(),
		"ServerConn":   reflect.TypeOf((*httputil.ServerConn)(nil)).Elem(),
	}
}
